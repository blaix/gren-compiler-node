module Compiler.Paths exposing 
    ( projectRoot
    , projectMetadata
    )


import FileSystem
import FileSystem.Path as Path exposing (Path)
import Task exposing (Task)


projectRoot : FileSystem.Permission -> Task FileSystem.Error Path
projectRoot perm =
    projectMetadata perm
        |> Task.map (\grenJsonPath -> Maybe.withDefault Path.empty (Path.parentPath grenJsonPath))


projectMetadata : FileSystem.Permission -> Task FileSystem.Error Path
projectMetadata perm =
    FileSystem.currentWorkingDirectory perm
        |> Task.andThen (\workingDir -> projectMetadataHelp perm workingDir)
    

projectMetadataHelp : FileSystem.Permission -> Path -> Task FileSystem.Error Path
projectMetadataHelp perm dir =
    Path.append (Path.fromPosixString "gren.json") dir
        |> FileSystem.checkAccess perm []
        |> Task.onError (\err ->
            if dir /= Path.empty && FileSystem.errorIsNoSuchFileOrDirectory err then
                Path.parentPath dir
                    |> Maybe.withDefault Path.empty
                    |> projectMetadataHelp perm
            
            else
                Task.fail err
        )
