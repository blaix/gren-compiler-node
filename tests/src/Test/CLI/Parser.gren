module Test.CLI.Parser exposing (tests)

import Expect
import Test exposing (Test, describe, test)
import CLI.Parser as Parser


testCmd =
    { word =
        "make"
    , arguments =
        Parser.zeroOrMoreArgs Parser.grenFileParser
    , flags =
        Parser.initFlags 
            (\debug output ->
                { debug = debug
                , output = output
                }
            )
            |> Parser.onOff "debug" "debug desc"
            |> Parser.flag "output" Parser.pathParser "output path"
    , commonDescription =
        Just "make your project"
    , summary =
        "Makey make make"
    , example = "gren make src/Main.gren"
    , builder =
        \args flags ->
            Ok
                { word = "make"
                , args = args
                , flags = flags
                }
    }


tests : Test
tests =
    describe "CLI Parser"
        [ test "Parses successfully" <| \{} -> 
            case Parser.run testCmd [ "make", "--debug", "--output=out", "src/Main.gren" ] of
                Err _ ->
                    Expect.fail "Failed to parse"

                Ok _ ->
                    Expect.pass
        ] 
